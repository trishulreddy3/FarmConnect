rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      // Allow any authenticated user to read user profiles
      allow read: if request.auth != null;
      // Only the owner can write to their document
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Contracts collection - authenticated users can read and write
    match /contracts/{contractId} {
      // Anyone authenticated can read contracts
      allow read: if request.auth != null;
      
      // Buyers can create contracts
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.buyerId;
      
      // Contract owner (buyer) can update their contracts
      allow update: if request.auth != null 
        && request.auth.uid == resource.data.buyerId;
      
      // Farmers can respond to contracts (update responses array)
      allow update: if request.auth != null 
        && request.auth.uid != resource.data.buyerId
        && request.writeFields.hasOnly(['responses', 'status', 'updatedAt']);
    }
    
    // Crops collection - authenticated users can read and write
    match /crops/{cropId} {
      // Anyone authenticated can read crops
      allow read: if request.auth != null;
      
      // Farmers can create crops
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.farmerId;
      
      // Crop owner (farmer) can update their crops
      allow update: if request.auth != null 
        && request.auth.uid == resource.data.farmerId;
      
      // Crop owner can delete their crops
      allow delete: if request.auth != null 
        && request.auth.uid == resource.data.farmerId;
    }
    
    // Chat rooms collection
    match /chatRooms/{chatRoomId} {
      // Users can read chat rooms they participate in
      allow read: if request.auth != null 
        && (request.auth.uid == resource.data.participants.farmerId 
            || request.auth.uid == resource.data.participants.buyerId);
      
      // Users can create chat rooms they participate in
      allow create: if request.auth != null 
        && (request.auth.uid == request.resource.data.participants.farmerId 
            || request.auth.uid == request.resource.data.participants.buyerId);
      
      // Users can update chat rooms they participate in
      allow update: if request.auth != null 
        && (request.auth.uid == resource.data.participants.farmerId 
            || request.auth.uid == resource.data.participants.buyerId);
    }
    
    // Messages collection
    match /messages/{messageId} {
      // Users can read messages in chat rooms they participate in
      allow read: if request.auth != null;
      
      // Users can create messages
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.senderId;
      
      // Users can update their own messages (for read status)
      allow update: if request.auth != null 
        && request.auth.uid == resource.data.senderId;
    }
    
    // Test collection (for testing purposes)
    match /test/{document} {
      allow read, write: if request.auth != null;
    }
  }
}
